// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaminrayApiExam.Data.Context;

#nullable disable

namespace SaminrayApiExam.Data.Migrations
{
    [DbContext(typeof(SaminrayExamContext))]
    partial class SaminrayExamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Orders.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("real");

                    b.Property<int>("ProductRef")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductRef");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Products.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductGroupRef")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductGroupRef");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Products.ProductGroup", b =>
                {
                    b.Property<int>("ProductGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductGroupId"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentGroup")
                        .HasColumnType("int");

                    b.HasKey("ProductGroupId");

                    b.ToTable("ProductGroups");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Receipts.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptId"));

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("real");

                    b.Property<int>("ProductRef")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("ReceiptId");

                    b.HasIndex("ProductRef");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Orders.Order", b =>
                {
                    b.HasOne("SaminrayApiExam.Data.Entities.Products.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Products.Product", b =>
                {
                    b.HasOne("SaminrayApiExam.Data.Entities.Products.ProductGroup", "ProductGroup")
                        .WithMany("Products")
                        .HasForeignKey("ProductGroupRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductGroup");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Receipts.Receipt", b =>
                {
                    b.HasOne("SaminrayApiExam.Data.Entities.Products.Product", "Product")
                        .WithMany("Receipts")
                        .HasForeignKey("ProductRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Products.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("SaminrayApiExam.Data.Entities.Products.ProductGroup", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
